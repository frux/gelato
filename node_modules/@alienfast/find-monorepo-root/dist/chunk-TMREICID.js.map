{"version":3,"sources":["../src/findMonorepoRoot.ts","../src/util.ts"],"sourcesContent":["import { findUp } from 'find-up'\n\nimport { Result } from './types'\nimport { findByPackageManager, findLerna } from './util'\n\nexport async function findMonorepoRoot(cwd: string): Promise<Result> {\n  let ret: Result | undefined\n\n  await findUp(\n    async (parent) => {\n      ret = findLerna(parent) || findByPackageManager(parent)\n      return ret && ret.dir\n    },\n    { cwd, type: 'directory' },\n  )\n\n  if (!ret) {\n    throw new Error(\n      `No monorepo root could be found upwards from the directory ${cwd} using lerna, yarn, pnpm, or npm as indicators.`,\n    )\n  }\n\n  return ret\n}\n","import fs from 'node:fs'\nimport path from 'node:path'\n\nimport stripJsonComments from 'strip-json-comments'\n\nimport { Lerna, Package, Result, Strategy } from './types'\n\nexport const exists = (dir: string, file: string) => fs.existsSync(path.join(dir, file))\n\nexport function readJson<T>(dir: string, file: string) {\n  if (!exists(dir, file)) {\n    return undefined\n  }\n\n  const filePath = path.join(dir, file)\n  try {\n    return JSON.parse(stripJsonComments(fs.readFileSync(filePath, 'utf8'))) as T\n  } catch (e) {\n    throw new Error(`${e}. Error reading ${filePath}`)\n  }\n}\n\nconst determinePackageManager = (pkg: Package, dir: string): Strategy | undefined => {\n  // in order to run the tests, we need to exclude our own package dir\n  if (process.env.NODE_ENV === 'test' && pkg.name === '@alienfast/find-monorepo-root') {\n    return undefined\n  }\n  // sub-packages may have packageManager specified (e.g. setup for docker image build). We only want a yarn package with workspaces\n  if (pkg.packageManager && pkg.packageManager.includes('yarn') && pkg.workspaces) {\n    return 'yarn'\n  } else if (pkg.bolt) {\n    return 'bolt'\n  } else if (exists(dir, 'pnpm-workspace.yaml')) {\n    return 'pnpm'\n  } else if (exists(dir, 'yarn.lock')) {\n    return 'yarn'\n  } else if (exists(dir, 'package-lock.json')) {\n    return 'npm'\n  } else if (pkg.workspaces) {\n    return 'yarn' // this could be true for npm as well, but we'll assume yarn and rely on lock file detection to capture npm\n  }\n\n  // throw new Error(`Could not determine package manager from ${dir}: ${JSON.stringify(pkg)}`)\n  return undefined\n}\n\nexport const findByPackageManager = (dir: string): Result<Strategy> | undefined => {\n  const pkg = readJson<Package>(dir, 'package.json')\n  if (!pkg) {\n    return undefined\n  }\n\n  const strategy = determinePackageManager(pkg, dir)\n  if (!strategy) {\n    return undefined\n  }\n  return { strategy, dir }\n}\n\nexport const findLerna = (dir: string): Result<'lerna'> | undefined => {\n  const lerna = readJson<Lerna>(dir, 'lerna.json')\n  // https://lerna.js.org/docs/api-reference/configuration\n  if (lerna) {\n    if (lerna.useWorkspaces || lerna.packages) {\n      return { strategy: 'lerna', dir }\n    }\n  }\n  return undefined\n}\n"],"mappings":";AAAA,SAAS,cAAc;;;ACAvB,OAAO,QAAQ;AACf,OAAO,UAAU;AAEjB,OAAO,uBAAuB;AAIvB,IAAM,SAAS,CAAC,KAAa,SAAiB,GAAG,WAAW,KAAK,KAAK,KAAK,IAAI,CAAC;AAEhF,SAAS,SAAY,KAAa,MAAc;AACrD,MAAI,CAAC,OAAO,KAAK,IAAI,GAAG;AACtB,WAAO;AAAA,EACT;AAEA,QAAM,WAAW,KAAK,KAAK,KAAK,IAAI;AACpC,MAAI;AACF,WAAO,KAAK,MAAM,kBAAkB,GAAG,aAAa,UAAU,MAAM,CAAC,CAAC;AAAA,EACxE,SAAS,GAAG;AACV,UAAM,IAAI,MAAM,GAAG,CAAC,mBAAmB,QAAQ,EAAE;AAAA,EACnD;AACF;AAEA,IAAM,0BAA0B,CAAC,KAAc,QAAsC;AAEnF,MAAI,QAAQ,IAAI,aAAa,UAAU,IAAI,SAAS,iCAAiC;AACnF,WAAO;AAAA,EACT;AAEA,MAAI,IAAI,kBAAkB,IAAI,eAAe,SAAS,MAAM,KAAK,IAAI,YAAY;AAC/E,WAAO;AAAA,EACT,WAAW,IAAI,MAAM;AACnB,WAAO;AAAA,EACT,WAAW,OAAO,KAAK,qBAAqB,GAAG;AAC7C,WAAO;AAAA,EACT,WAAW,OAAO,KAAK,WAAW,GAAG;AACnC,WAAO;AAAA,EACT,WAAW,OAAO,KAAK,mBAAmB,GAAG;AAC3C,WAAO;AAAA,EACT,WAAW,IAAI,YAAY;AACzB,WAAO;AAAA,EACT;AAGA,SAAO;AACT;AAEO,IAAM,uBAAuB,CAAC,QAA8C;AACjF,QAAM,MAAM,SAAkB,KAAK,cAAc;AACjD,MAAI,CAAC,KAAK;AACR,WAAO;AAAA,EACT;AAEA,QAAM,WAAW,wBAAwB,KAAK,GAAG;AACjD,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,EACT;AACA,SAAO,EAAE,UAAU,IAAI;AACzB;AAEO,IAAM,YAAY,CAAC,QAA6C;AACrE,QAAM,QAAQ,SAAgB,KAAK,YAAY;AAE/C,MAAI,OAAO;AACT,QAAI,MAAM,iBAAiB,MAAM,UAAU;AACzC,aAAO,EAAE,UAAU,SAAS,IAAI;AAAA,IAClC;AAAA,EACF;AACA,SAAO;AACT;;;AD/DA,eAAsB,iBAAiB,KAA8B;AACnE,MAAI;AAEJ,QAAM;AAAA,IACJ,OAAO,WAAW;AAChB,YAAM,UAAU,MAAM,KAAK,qBAAqB,MAAM;AACtD,aAAO,OAAO,IAAI;AAAA,IACpB;AAAA,IACA,EAAE,KAAK,MAAM,YAAY;AAAA,EAC3B;AAEA,MAAI,CAAC,KAAK;AACR,UAAM,IAAI;AAAA,MACR,8DAA8D,GAAG;AAAA,IACnE;AAAA,EACF;AAEA,SAAO;AACT;","names":[]}