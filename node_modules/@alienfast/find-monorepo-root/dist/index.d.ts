type Strategy = 'bolt' | 'yarn' | 'pnpm' | 'lerna' | 'npm';
interface Result<T extends Strategy = Strategy> {
    strategy: T;
    dir: string;
}
interface Lerna {
    useWorkspaces?: boolean;
    packages?: string[];
}
interface Package {
    name: string;
    workspaces?: any;
    bolt?: any;
    packageManager?: string;
}

declare function findMonorepoRoot(cwd: string): Promise<Result>;

declare const exists: (dir: string, file: string) => boolean;
declare function readJson<T>(dir: string, file: string): T | undefined;
declare const findByPackageManager: (dir: string) => Result<Strategy> | undefined;
declare const findLerna: (dir: string) => Result<'lerna'> | undefined;

export { Lerna, Package, Result, Strategy, exists, findByPackageManager, findLerna, findMonorepoRoot, readJson };
